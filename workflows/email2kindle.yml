on:
  email:
    imap:
      host: outlook.office365.com
      port: 993
      tls: true
      user: ${{secrets.EMAIL_USER}}
      password: ${{secrets.EMAIL_PASSWORD}}
    config:
      filterOutputs:
        # subject: send2kindle_by_workflow
        subject: 1
        text: 1
        textAsHtml: 1
        html: 1
      # filter:
        # subject:
          # $regex: send2kindle_by_workflow
jobs:
  send_email:
    name: Send Email
    runs-on: ubuntu-latest
    steps:
      - name: Print Outputs
        env:
          subject: ${{(on.email.outputs.subject)}}
          html: ${{(on.email.outputs.html)}}
          textAsHtml: ${{(on.email.outputs.textAsHtml)}}
          text: ${{(on.email.outputs.text)}}
        run: |
          echo subject: $subject
          echo html: $html
          echo text: $text
          echo textAsHtml: $textAsHtml

      # - name: Print Base64 Outputs
        # env:
          # subject: ${{(on.email.outputs.subject)}}
          # output: ${{(on.email.outputs.text)}}
        # run: |
          # echo "output=$(echo $output| base64)" >> $GITHUB_ENV

      - name: Send mail by action-send-mail
        uses: muxueqz/action-send-mail@v3.0.4
        with:
          server_address: outlook.office365.com
          server_port: 587
          username: ${{secrets.EMAIL_USER}}
          password: ${{secrets.EMAIL_PASSWORD}}
          subject: ${{(on.email.outputs.subject)}}
          body: Build job of ${{github.repository}} completed successfully!
          to: ${{secrets.TO_EMAIL}}
          from: actionsworkflow # <user@example.com>
          #          # Optional content type (defaults to text/plain):
          #          content_type: text/html
          #          # Optional converting Markdown to HTML (set content_type to text/html too):
          #          convert_markdown: true
          #          # Optional attachments:
          #          attachments: attachments.zip,git.diff,./dist/static/main.js
          # attachments: '[{"content": "test attachments", "filename":"push.txt"}]'
          # content_type: text/html
          # attachments: ${{(on.email.outputs.textAsHtml)}}
          # attachments: '[${{(on.email.outputs.text)}}]'
          attachments: ${{(on.email.outputs.html)}}
          attachments_filename: ${{(on.email.outputs.subject)}}.html
          # attachments: ${{(output)}}
      - name: Send Email by Docker
        uses: muxueqz/sendemail-alpine@main
        #        # env:
        #          SUBJECT: ${{(on.email.outputs.subject)}}
        #          SMTP_SERVER: outlook.office365.com:587
        #          TO_ADDRESS: ${{secrets.TO_EMAIL}}
        #          FROM_ADDRESS: ${{secrets.EMAIL_USER}}
        #          SMTP_USER: ${{secrets.EMAIL_USER}}
        #          SMTP_PASSWORD: ${{secrets.EMAIL_PASSWORD}}
        #          BODY: From Docker
        #          # ATTACHMENTS: ${{(on.email.outputs.text)}}
        #          ATTACHMENTS: test ATTACHMENTS
        #          ATTACHMENTS_FILENAME: ${{(on.email.outputs.subject)}}.txt
        #        # run: |
        #          # /usr/bin/sendemail.sh
        with:
          subject: ${{(on.email.outputs.subject)}}
          smtp_server: outlook.office365.com:587
          to_address: ${{secrets.TO_EMAIL}}
          from_address: ${{secrets.EMAIL_USER}}
          smtp_user: ${{secrets.EMAIL_USER}}
          smtp_password: ${{secrets.EMAIL_PASSWORD}}
          body: From Docker
          attachments: ${{(on.email.outputs.html)}}
          # attachments: TEST atTACHMENTS
          attachments_filename: ${{(on.email.outputs.subject)}}.html

  convert_via_pandoc:
    runs-on: ubuntu-latest
    steps:
      - name: Make a html
        env:
          subject: ${{(on.email.outputs.subject)}}
          html: ${{(on.email.outputs.html)}}
        run: |
          echo "$html" > input.html
      - uses: docker://pandoc/core:latest
        with:
          args: "--output=index.docx input.html"
          # args: |>
            # --standalone
            # --output=outputs/index.docx
            # input.txt
      - name: Print Pandoc Outputs
        run: |
          wc -c index.docx
